import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.6' apply false
}

subprojects {
    apply plugin: 'java'

    repositories {
        maven {
            name = "papermc-snapshots"
            url = uri("https://repo.papermc.io/repository/maven-snapshots/")
            mavenContent {
                snapshotsOnly()
            }
        }
        maven {
            name = "papermc-releases"
            url = uri("https://repo.papermc.io/repository/maven-public/")
            mavenContent {
                releasesOnly()
            }
        }
        maven { url = 'https://jitpack.io' }
        mavenCentral()
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

tasks.register('shadowAllVersions', ShadowJar) {
    group = 'shadow'
    description = 'Builds a single fat JAR that supports all Minecraft versions'
    archiveBaseName.set('NakedAndAfraid')
    def ver = project.hasProperty('ver') ? project.property('ver') : '1.2.0'
    archiveVersion.set(project.provider { ver } as Provider<? extends String>)

    // Include classes from version-specific modules and entrypoint
    from(project(':v1_8').sourceSets.main.output)
    from(project(':v1_17').sourceSets.main.output)
    from(project(':v1_21').sourceSets.main.output)
    from(project(':entrypoint').sourceSets.main.output)

    // Include dependencies
    configurations = [
            project(':v1_8').configurations.runtimeClasspath,
            project(':v1_17').configurations.runtimeClasspath,
            project(':v1_21').configurations.runtimeClasspath,
            project(':entrypoint').configurations.runtimeClasspath
    ].flatten() as List<FileCollection>

    // Relocate external libs if needed (e.g., PaperLib)
    relocate 'io.papermc.lib', 'com.crimsonwarpedcraft.nakedandafraid.lib'

    // Include only entrypoint/plugin.yml (version ones are deleted, but exclude for safety)
    from(project(':entrypoint').sourceSets.main.resources) { include 'plugin.yml' }
    from(project(':v1_8').sourceSets.main.resources) { exclude 'plugin.yml' }
    from(project(':v1_17').sourceSets.main.resources) { exclude 'plugin.yml' }
    from(project(':v1_21').sourceSets.main.resources) { exclude 'plugin.yml' }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'com.crimsonwarpedcraft.nakedandafraid.entrypoint.Main'
    }
}

def serverSetupFile = file('gradle/server-setup.gradle')
if (serverSetupFile.exists()) {
    apply from: serverSetupFile
}