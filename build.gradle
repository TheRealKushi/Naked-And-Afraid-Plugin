// root/build.gradle

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.6' apply false
}

subprojects {
    apply plugin: 'java'

    repositories {
        maven { url = 'https://repo.papermc.io/repository/maven-public/' }
        maven { url = 'https://repo.papermc.io/repository/maven-snapshots/' }
        maven { url = 'https://jitpack.io' }
        mavenCentral()
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

tasks.register('shadowV1_17', ShadowJar) {
    group = 'shadow'
    description = 'Builds a shadow JAR for Minecraft 1.17'
    archiveClassifier.set('1.17')
    archiveBaseName.set('NakedAndAfraid')
    from(project(':v1_17').sourceSets.main.output)
    from(project(':common').sourceSets.main.output)
    configurations = [project(':v1_17').configurations.runtimeClasspath]
    relocate 'io.papermc.lib', 'com.crimsonwarpedcraft.nakedandafraid.lib.v1_17'
    manifest {
        attributes 'Main-Class': 'com.crimsonwarpedcraft.nakedandafraid.v1_17.NakedAndAfraidV1_17'
    }
    from(project(':v1_17').sourceSets.main.resources) {
        include 'plugin.yml'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.register('shadowV1_21', ShadowJar) {
    group = 'shadow'
    description = 'Builds a shadow JAR for Minecraft 1.21'
    archiveClassifier.set('1.21')
    archiveBaseName.set('NakedAndAfraid')
    from(project(':v1_21').sourceSets.main.output)
    from(project(':common').sourceSets.main.output)
    configurations = [project(':v1_21').configurations.runtimeClasspath]
    relocate 'io.papermc.lib', 'com.crimsonwarpedcraft.nakedandafraid.lib.v1_21'
    manifest {
        attributes 'Main-Class': 'com.crimsonwarpedcraft.nakedandafraid.v1_21.NakedAndAfraidV1_21'
    }
    from(project(':v1_21').sourceSets.main.resources) {
        include 'plugin.yml'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

def serverSetupFile = file('gradle/server-setup.gradle')
if (serverSetupFile.exists()) {
    apply from: serverSetupFile
}